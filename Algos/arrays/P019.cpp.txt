#include<bits/stdc++.h>
using namespace std;
//Input: nums = [10, 5, 2, 7, 1, 9],  k=15

int maxSubarrayOnlyPos(vector<int>& nums,int target) {
    int left = 0,right = 0,n = nums.size(),curr_sum = 0,max_size = 0;
    curr_sum+=nums[right];
    while(right<n){
        if(curr_sum==target){
            max_size = max(max_size,right - left + 1);
            if(right==n-1) return max_size;
            curr_sum+=nums[++right];
        }else if(curr_sum>target){
            curr_sum-=nums[left];
            if(left==right){
                right++;
            }
            left++;
        }else{
            if(right==n-1) return max_size;
            curr_sum+=nums[++right];
        }
    }
    return max_size;
}

vector<int> getarr(){
    string s,num="";
    getline(cin,s);
    vector<int> arr;
    for(char c:s){
        if(isdigit(c) || c=='-'){
            num+=c;
        }else if(!num.empty()){
            arr.push_back(stoi(num));
            num="";
        }
    }
    if(!num.empty()){
        arr.push_back(stoi(num));
    }
    return arr;
}

void printarr(vector<int> &a){
    cout<<"[";
    for(int i=0;i<a.size();i++){
        cout<<a[i]<<", ";
    }
    cout<<"]";
}

int main(){
    
    vector<int>arr1 = getarr();
    int k;
    cin>>k;
    int num = maxSubarray(arr1,k);
    cout<<num;
    return 0;
}